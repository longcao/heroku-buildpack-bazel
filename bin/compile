#!/usr/bin/env bash
#
# Copyright 2016 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#
# Usage:
#   bin/compile <build-dir> <cache-dir> <env-dir>
#
# Notes:
# This script takes the build, cache, and environment directories are arugments.
# Cache is persisted between builds. The full application should be built in the
# build directory. This is a temporary directory that the Heroku built system
# will package into a slug with a different path, so symlinks can cause
# problems.
#
# We circumvent this difficulty by building the deploy jar and copying that to
# the build directory.

# Indents all text by 8 spaces.
indent() {
  sed -u "s/^/       /"
}

# fail fast
set -e

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

###################################
# BEGIN: Installing prerequisites #
###################################

# default to Bazel version 0.25.2
if [[ ! -v BAZEL_VERSION ]]; then
  BAZEL_VERSION="0.25.2"
fi

## Create the CACHE_DIR if it doesn't exist.
if [[ ! -d "$CACHE_DIR" ]]; then
  mkdir -p "$CACHE_DIR"
fi

# install Java 1.8
JVM_BUILDPACK="https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz"
JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-$JVM_BUILDPACK}
echo "-----> Installing Java 8"
if [[ ! -d "$CACHE_DIR/jvm-common" ]]; then
  mkdir -p "$CACHE_DIR/jvm-common"
  echo "-----> Downloading Java 8 from $JVM_COMMON_BUILDPACK"
  curl --retry 3 --silent --location "$JVM_COMMON_BUILDPACK" \
    | tar xzm -C "$CACHE_DIR/jvm-common" --strip-components=1

  # Init jvm-common scripts
  . "$CACHE_DIR/jvm-common/bin/util"
  . "$CACHE_DIR/jvm-common/bin/java"

  # Install the JDK to $BUILD_DIR, since it needs to be included in the slug
  echo "-----> Installing JDK using jvm-common scripts"
  install_java_with_overlay "$BUILD_DIR" | indent
  echo "-----> Java 8 installed"
else
  echo "-----> Using cached Java 8"
fi

# Set this environment variable for Bazel, so it can use JDK 1.8.
export JAVA_HOME="$BUILD_DIR/.jdk"

# Fetch the Bazel installer script
BAZEL_URL="https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
echo "-----> Installing Bazel"
export BAZEL_INSTALLER="$CACHE_DIR/bazel-installer.sh"
if [[ ! -f "$BAZEL_INSTALLER" ]]; then
  echo "-----> Downloading Bazel installer from $BAZEL_URL"
  if ! curl -L -o "$BAZEL_INSTALLER" "$BAZEL_URL" ; then
    echo "Download failed" >&2
    exit 1
  fi
else
  echo "-----> Using cached Bazel installer script at $BAZEL_INSTALLER"
fi

BAZEL_BASE="$CACHE_DIR/bazel"

# Install Bazel inside $BAZEL_BASE
if [[ ! -d "$CACHE_DIR/bazel" ]]; then
  /usr/bin/env bash "$BAZEL_INSTALLER" \
    --base="$BAZEL_BASE" \
    --bin="$BAZEL_BASE/binary" | indent
  echo "-----> Bazel installed"
else
  echo "-----> Using cached Bazel installation"
fi

# Add $BAZEL_BASE to $PATH
if ! echo "$PATH" | grep --silent -e "$BAZEL_BASE" ; then
  PATH=$BAZEL_BASE:$PATH
  export PATH
fi

###################################
# END: Installing prerequisites   #
###################################

###################################
# BEGIN: Build app                #
###################################

# Build app using build_path as the target to build
echo "-----> Building app"
BAZEL_CMD="$BAZEL_BASE/bin/bazel --bazelrc=$BUILD_DIR/.bazelrc"
cd "$BUILD_DIR"
$BAZEL_CMD clean
$BAZEL_CMD build -c opt "$(cat build_path)"

# Find absolute path to deploy jar. For whatever reason. Heroku doesn't like the Bazel symlinks.
BAZEL_BIN="$(ls -l | grep "bazel-bin" | sed "s/.* -> //")"
echo "$BAZEL_BIN"

# Copy the deploy jar to the root $BUILD_DIR
cp "$BAZEL_BIN/$(sed "s/:/\//" build_path)" "$BUILD_DIR/app.jar"

# Clean up other artifacts so that the slug is smaller
echo "-----> Cleaning up build directory"
$BAZEL_CMD clean

###################################
# END: Build app                  #
###################################